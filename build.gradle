apply plugin: 'java'
apply plugin: 'eclipse'

repositories { 
	mavenCentral()
	jcenter()
	
	//Manifold boilerplate
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

configurations {
	//Manifold: give tests access to compileOnly dependencies
    testImplementation.extendsFrom compileOnly

    //Dependency shading
    shade
    compile.extendsFrom shade
}

dependencies {
	implementation files('bukkit_libs/item-nbt-api-plugin-2.4.1.jar')
	implementation files('bukkit_libs/PacketWrapper.jar')
	implementation files('bukkit_libs/ProtocolLib.jar')
	implementation files('bukkit_libs/spigot-api-1.15.2-R0.1-SNAPSHOT-shaded.jar')

    implementation files('bukkit_libs/minecraft_server.1.15.2.jar')

	//Manifold-core boilerplate
    testImplementation 'junit:junit:4.12'
	compileOnly 'systems.manifold:manifold:2020.1.25'
    implementation 'systems.manifold:manifold-rt:2020.1.25'
	annotationProcessor group: 'systems.manifold', name: 'manifold', version: '2020.1.25'
	
	//Manifold-preprocessor boilerplate
	compileOnly 'systems.manifold:manifold-preprocessor:2020.1.25'
    annotationProcessor 'systems.manifold:manifold-preprocessor:2020.1.25'
    
    //Manifold-ext boilerplate
    compileOnly 'systems.manifold:manifold-ext:2020.1.25'
    implementation 'systems.manifold:manifold-ext-rt:2020.1.25'
    annotationProcessor group: 'systems.manifold', name: 'manifold-ext', version: '2020.1.25'

    //Shading
    shade 'systems.manifold:manifold-rt:2020.1.25'
    shade 'systems.manifold:manifold-ext-rt:2020.1.25'
}

//Shading
jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

//Manifold compiler linkup
if (JavaVersion.current() != JavaVersion.VERSION_1_8 &&
    sourceSets.main.allJava.files.any {it.name == "module-info.java"}) {
    tasks.withType(JavaCompile) {
        // if you DO define a module-info.java file:
        options.compilerArgs += ['-Xplugin:Manifold', '--module-path', it.classpath.asPath]
    }
} else {
    tasks.withType(JavaCompile) {
        // If you DO NOT define a module-info.java file:
        options.compilerArgs += ['-Xplugin:Manifold']
    }
}

//Stuff to streamline Bukkit development

//Incremental build number
task incrementBuildNumber(type:Exec) {
    doFirst {
        project.logger.lifecycle("Incrementing build number of config.yml")
    }

    workingDir('.')
    commandLine('python', 'updateYMLs.py')
}
task copyPluginYML(type:Copy) {
    from file('src/main/resources/plugin.yml')
    into file('bin/main/')
}

processResources.dependsOn(incrementBuildNumber, copyPluginYML)

//Copy plugin JAR to server/plugins folder
task copyPlugin(type:Copy) {
    from file('build/libs/rmBukkitAPIs.jar')
    into file('D:\\_Data\\mcmds\\serverplugins\\server\\plugins')
}

copyPlugin.dependsOn(jar)
build.dependsOn(copyPlugin)
